// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// covRcpp
NumericMatrix covRcpp(NumericMatrix& X, const int norm_type);
RcppExport SEXP propr_covRcpp(SEXP XSEXP, SEXP norm_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type norm_type(norm_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(covRcpp(X, norm_type));
    return rcpp_result_gen;
END_RCPP
}
// vlrRcpp
NumericMatrix vlrRcpp(NumericMatrix& X);
RcppExport SEXP propr_vlrRcpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(vlrRcpp(X));
    return rcpp_result_gen;
END_RCPP
}
// clrRcpp
NumericMatrix clrRcpp(NumericMatrix& X);
RcppExport SEXP propr_clrRcpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(clrRcpp(X));
    return rcpp_result_gen;
END_RCPP
}
// alrRcpp
NumericMatrix alrRcpp(NumericMatrix& X, const int ivar);
RcppExport SEXP propr_alrRcpp(SEXP XSEXP, SEXP ivarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type ivar(ivarSEXP);
    rcpp_result_gen = Rcpp::wrap(alrRcpp(X, ivar));
    return rcpp_result_gen;
END_RCPP
}
// symRcpp
NumericMatrix symRcpp(NumericMatrix& X);
RcppExport SEXP propr_symRcpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(symRcpp(X));
    return rcpp_result_gen;
END_RCPP
}
// phiRcpp
NumericMatrix phiRcpp(NumericMatrix X, const bool sym);
RcppExport SEXP propr_phiRcpp(SEXP XSEXP, SEXP symSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< const bool >::type sym(symSEXP);
    rcpp_result_gen = Rcpp::wrap(phiRcpp(X, sym));
    return rcpp_result_gen;
END_RCPP
}
// rhoRcpp
NumericMatrix rhoRcpp(NumericMatrix X, const int ivar);
RcppExport SEXP propr_rhoRcpp(SEXP XSEXP, SEXP ivarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type ivar(ivarSEXP);
    rcpp_result_gen = Rcpp::wrap(rhoRcpp(X, ivar));
    return rcpp_result_gen;
END_RCPP
}
// indexPairs
std::vector<int> indexPairs(NumericMatrix& X, const String op, const double ref);
RcppExport SEXP propr_indexPairs(SEXP XSEXP, SEXP opSEXP, SEXP refSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const String >::type op(opSEXP);
    Rcpp::traits::input_parameter< const double >::type ref(refSEXP);
    rcpp_result_gen = Rcpp::wrap(indexPairs(X, op, ref));
    return rcpp_result_gen;
END_RCPP
}
// indexToCoord
List indexToCoord(IntegerVector V, const int N);
RcppExport SEXP propr_indexToCoord(SEXP VSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type V(VSEXP);
    Rcpp::traits::input_parameter< const int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(indexToCoord(V, N));
    return rcpp_result_gen;
END_RCPP
}
